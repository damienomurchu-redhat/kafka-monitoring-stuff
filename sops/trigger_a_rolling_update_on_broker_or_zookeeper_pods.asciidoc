// begin header
ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]
:numbered:
:toc: macro
:toc-title: pass:[<b>Table of Contents</b>]
// end header
= Trigger reboot of kafka or zookeeper pods

toc::[]

== Description

The purpose of this SOP is to describe the process of triggering a rolling reboot of kafka broker or zookeeper pods.

Adding an annotation tells the strimzi operator we want it to safely reboot the pod/s. It will attempt to roll the pod/s while maintaining cluster integrity and ensuring topics don't go under min-ISR.

== Prerequisites

* Logged into OSD cluster with OC commandline tool


== Execute/Resolution

=== Restart a single pod
Add a `strimzi.io/manual-rolling-update=true` annotation to the kafka or zookeeper pod.

```
    oc annotate pod <POD_NAME> strimzi.io/manual-rolling-update=true -n <POD_NAMESPACE>
```

=== Restart all pods
Add a `strimzi.io/manual-rolling-update=true` annotation to the kafka or zookeeper statefulset.

```
    oc annotate statefulset<STATEFULSET_NAME> strimzi.io/manual-rolling-update=true -n <STATEFULSET_NAMESPACE>
```
== Validate

The operator should restart the pod/s with the `strimzi.io/manual-rolling-update=true` annotation, you can verify they have been restarted by the `AGE` of the pod/s

```
    oc get pods -n <NAMESPACE>
```

The operator should also remove the `strimzi.io/manual-rolling-update=true` annotation from the pod.

```
    oc get pod <POD_NAME> -n <NAMESPACE> | grep strimzi.io/manual-rolling-update
```

== Troubleshooting

https://access.redhat.com/documentation/en-us/red_hat_amq/2020.q4/html/using_amq_streams_on_openshift/assembly-deployment-configuration-str#proc-manual-rolling-update-kafka-deployment-configuration-kafka